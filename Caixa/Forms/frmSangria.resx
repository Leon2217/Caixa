<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATTspK048Kn9QPix/UD4sf1A+LH9QPix/UD4sf1A+
        LH9QPCx/TDkrNQAAAAAAAAAAAAAAAE4+K0FQPix/UD4sf1A+LH9QPix/UD4sf1A+LH9QPix/TzwqbQAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATz0qhFA+LP9QPiz/UD4s/1A+
        LP9QPiz/UD4s/1A+LP9QPiz/Tz0rywAAAAAAAAAAAAAAAE88K7BQPiz/UD4s/1A+LP9QPiz/UD4s/1A+
        LP9QPiz/UD4s/088K3YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATzsrTVA+
        LP99fMH/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P9xbJv/Tz0r/k84Jy0AAAAAAAAAAE49K3VQPi3/hYjd/4uQ
        8P+LkPD/i5Dw/4uQ8P+Kj+//ZFlu/089LPlOOic0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATD8mFE89K/xvaZT/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+GieD/UUAx/089K+NPPSvdTz0r1VA9
        K89QPiz/d3St/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/h4rj/1dHQ/9PPSrWODgcCQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE89LNZhVmf/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/bWaM/2BU
        Yv9lW3P/Y1hs/1tNUf9SQTT/dHCl/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/3t6vf9QPi3/TzwqigAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE48KptURDv/io/u/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P9oX33/Tz0r+046JzQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATD0oMk89K9pQPy7/honh/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+Hi+X/VkdB/089K8sAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQPilWTz0r9lZH
        Qv97e77/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/d3Su/1A+LP9PPStkAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE83JyBPOytATj4qTk49
        K3VPPSv8XlJc/4aJ4P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/io/v/15SXf9PPCvmRS4XCwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNOCokTz0ry089
        K/5QPiz/UD4s/1A+LP9eUlz/iI3p/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/35+
        xv9QPiz/Tz0rdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8/
        HwhPPSvZVkZB/3Jtnv98e77/f4DK/4CBzf+Jjen/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P9gVWP/Tz0r5DMzAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAE88K2pQPy//gIHN/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P96eLj/UD4s/009KU8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE88K8FhVWX/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+Kjuz/VEQ6/089K54AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPz8ABE89K/RvapX/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/ZVty/089
        LO0zMzMFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARz0oGVA+LP92c6z/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/eXe2/1A+LP9OOitBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATT0mIVA+
        LP93dK7/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/h4vk/1A+Lf9PPip3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATz8fEE89K/1vapX/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/io/v/1REO/9PPCuTAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE89K8ZUQzn/cGuY/4CBzv+Jjen/i5Dw/4uQ8P+LkPD/i5Dw/4mN
        6f+Jjen/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/2dee+1OPCpUAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEc9KBlQPSuvTz0r/FA+LP9SQTP/g4TV/4uQ
        8P+LkPD/gYLQ/1VFPP9VRTz/gYLQ/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4mO
        75gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATjonGk88
        K2pPPSv+dXKp/4uQ8P+LkPD/cGqW/1A+LP9QPiz/cGqW/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P90cab/VkY//1NCN+VPPSurTj0qWz8/AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAJPPSvrZlx1/4uQ8P+LkPD/honf/15SXf9eUl3/honf/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P9+fsb/ZFtw6089K6lPPSvdUD4s/089K8hEMyIPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQPiycU0I3/4eL5f+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/iZDwegAAAAA4OBwJTz4rwVA+LP9PPSv2Tz0s1k49
        KmsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABOPShLUD4s/3Fsm/+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P9zb6H+VklGUAAAAAFPPSu3Tz0r/E89
        K+1PPSvtTz0ryFA+LP9POypaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE09JiFPPSvgU0M4/319
        xP+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/iY7s/4WH3P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/3d0rv9QPiz/Tz0rgU86
        KT1PPSv+UD4qZk89K7ZPPSrKMzMABU89K9pPPSu7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASzweEU89
        K9lVRj//gIHN/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4qP7/98fMD/XE9U/1NDOf+Kj+//i5Dw/4uQ8P+LkPD/e3m6/1FA
        Mv9OPSvCVSoqBk47K15QPiz/UDorI089K+lQPSuZAAAAAE8+K6RPPSvaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATz0rnlNDOP+Bgs//i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/c26g/2xliv9ybp//dXGn/3Rwpf9wapb/Z154/1hJSP9QPiz/UkxA/3Z4sv+LkPD/i5Dw/4uQ
        8P93dK7/UUAy/049K89LPC0RAAAAAE46JydPPSz5Tz0r8U89K/xOOiw0AAAAAE88K7BPPSrQAAAAAAAA
        AAAAAAAAAAAAAAAAAAA/Px8IUD0r+G1nj/+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ8P+LkPD/i5Dw/4uQ
        8P+LkPD/i5Dw/4uQ8P+LkPD/Y1hs/1FAMP9QPiz/UD4s/1A+LP9QPi3/Uk1B/1Ztbf9dna//ZdH3/2nQ
        /f9oc5T/bWaM/4qP7/tZSkrkTz0qvks8HhEAAAAAAAAAAAAAAABMOig5Tjwqj008K0wAAAAAAAAAAE47
        KWJOOyliAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTz0q0FJCNf9qY4X/fXzC/4iM5/+Kj+//i5Dw/4uQ
        8P+Kj+//honf/4SH2v+LkPD/i5Dw/4uQ8P+LkPD/io/v/4iQ7P9suun/Y8Tl/2PG5/9l0PX/YsHh/12c
        rv9l1v7/Ztf//2bX//9aiZP/UD4s/11RWpA/PwAEAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASDYkDk48K4JPPSvlTz0r/lA/
        Lv9VRj//WUpK/1hKSf9URDv/UD4s/1A/Lv9iV2j/dXGo/4aK4f+LkPD/cWya/2OBmv9m1///Ztf//2XS
        +P9bkJ3/UlFH/1A+LP9WbGz/YbbS/2bX//9l1v3/V29w/089K/VINiQcAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABTzoqME89K2NPPCuHTz0rmk89K55PPSuRTjwqcU88K4ZPPSvjUD4s/19TYN6GieDJUkE0/1h6
        f/9m1///Zdb+/1VkYf9QQDD/Uk9D/1A+LP9TV0//UEIx/2G10f9m1///Y8fp/1BDMv9OPSuIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTTwsLkc9
        KBlOPCpUUD4s/2G20f9m1///Zdb+/1l9hP9fq8L/W4qV/1A+LP9l0/n/UUk7/1l8gv9m1///Ztf//1Zt
        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
        AAAAAAAATDMmFE89Kn1PPSvOTz0r9k8+K/pPPSvoTz0rqkw9K0YAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVQAAA0gkJAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP/ADgB//wAA/8AOAH//AAD/wAYAP/8AAP/AAAAf/wAA/+AAAB//AAD/4AAAD/8AAP/A
        AAAH/wAA/4AAAAf/AAD4AAAAA/8AAOAAAAAD/wAAwAAAAAH/AADAAAAAAf8AAMAAAAAB/wAAgAAAAAD/
        AACAAAAAAP8AAIAAAAAA/wAAgAAAAAD/AADAAAAAAP8AAMAAAAAB/wAA8AAAAAA/AAD4AAAAAB8AAPwA
        AAACBwAA/AAAAAADAAD4AAAAAAMAAPAAAAAAEwAA8AAAAAQTAADgAAAADjMAAOAAAAAf/wAA8AAAAD//
        AAD8AAAAP/8AAP/+AAA//wAA///AAB//AAD//8AAH/8AAP//wAAf/wAA///AAD//AAD//+AAP/8AAP//
        4AB//wAA///wAH//AAD///gA//8AAP///AP//wAA////n///AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>